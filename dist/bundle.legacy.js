(()=>{"use strict";class e{#e;constructor(){this.#e=[]}get lista(){return[...this.#e]}get listaRef(){return this.#e}set listaRef(e){this.#e=e}}const r=new class extends e{constructor(){super();try{for(var e=arguments.length,r=new Array(e),t=0;t<e;t++)r[t]=arguments[t];r.forEach((e=>this.añadirAsignatura(e)))}catch(e){console.error(`Error al inicializar las asignaturas: ${e.message}`)}}añadirAsignatura(e){try{if(this.listaRef.some((r=>r.nombre===e.nombre)))throw new Error(`La asignatura '${e.nombre}' ya existe.`);this.listaRef.push(e)}catch(e){console.error(`Error al añadir asignatura: ${e.message}`)}}eliminarAsignatura(e){try{if("string"!=typeof e||""===e.trim())throw new Error("El nombre de la asignatura debe ser una cadena no vacía.");const r=this.listaRef.find((r=>r.nombre.toLowerCase()===e.toLowerCase()));if(!r)throw new Error("Error: La asignatura no se encuentra en la lista.");this.listaRef=this.listaRef.filter((r=>r.nombre.toLowerCase()!==e.toLowerCase())),t.lista.forEach((e=>{e.estaMatriculado(r.nombre)&&e.desmatricular(r)}))}catch(e){console.error(`Error al eliminar asignatura: ${e.message}`)}}busquedaAsignaturas(e){try{if("string"!=typeof e||""===e.trim())throw new Error("El patrón de búsqueda debe ser una cadena no vacía.");const r=this.listaRef.filter((r=>r.nombre.toLowerCase().includes(e.toLowerCase())));return 0===r.length?console.log("No se encontraron asignaturas."):(console.log("Asignaturas encontradas:"),r.forEach((e=>console.log(`- Nombre: ${e.nombre}`)))),r}catch(e){return console.error(`Error en la búsqueda de asignaturas: ${e.message}`),[]}}generarReporte(){console.log("\n--- Reporte de Asignaturas ---"),0!==this.listaRef.length?this.listaRef.forEach(((e,r)=>{console.log(`${r+1}. Nombre: ${e.nombre}`)})):console.log("No hay asignaturas registradas.")}},t=new class extends e{#r;constructor(){super(),this.#r=[]}agregarEstudiante(e){try{if(this.#r.some((r=>r.nombre===e.nombre)))throw new Error("No se permiten duplicados en la lista de estudiantes (mismo ID).");this.#r.push(e)}catch(e){console.error(`Error al agregar estudiante: ${e.message}`)}}obtenerEstudiantePorId(e){try{const r=this.#r.find((r=>r.id===e));if(!r)throw new Error("Estudiante no encontrado.");return r}catch(e){return console.error(`Error al buscar estudiante: ${e.message}`),null}}get lista(){return this.#r}matricularEstudiante(e,r,t){try{if(isNaN(e))throw new Error("ID no válido.");const a=this.#r.find((r=>r.id===e));if(!a)throw new Error("Estudiante no encontrado.");const n=t.lista.find((e=>e.nombre.toLowerCase()===r.toLowerCase()));if(!n)throw new Error("Asignatura no encontrada.");a.matricular(n)}catch(e){console.error(`Error al matricular estudiante: ${e.message}`)}}eliminarEstudiante(e){try{const r=this.#r.length;if(this.#r=this.#r.filter((r=>r.id!==e)),this.#r.length===r)throw new Error("Estudiante no encontrado para eliminar.")}catch(e){console.error(`Error al eliminar estudiante: ${e.message}`)}}buscarEstudiante(e){try{if("string"!=typeof e||""===e.trim())throw new Error("El patrón de búsqueda debe ser una cadena no vacía.");return this.#r.filter((r=>r.nombre.toLowerCase().includes(e.toLowerCase())))}catch(e){return console.error(`Error al buscar estudiantes: ${e.message}`),[]}}obtenerPromedioGeneral(){try{if(0===this.#r.length)return 0;const e=this.#r.map((e=>e.obtenerPromedioGeneral()));return e.reduce(((e,r)=>e+r),0)/e.length}catch(e){return console.error(`Error al calcular el promedio general: ${e.message}`),0}}añadirCalificacion(e,t,a){try{const n=this.obtenerEstudiantePorId(e);if(!n)throw new Error("Estudiante no encontrado.");const o=r.lista.find((e=>e.nombre.toLowerCase()===t.toLowerCase()));if(!o)throw new Error("Asignatura no encontrada.");n.agregarCalificacion(o,a)}catch(e){console.error(`Error al añadir calificación: ${e.message}`)}}desmatricularEstudiante(e,t){try{const a=this.obtenerEstudiantePorId(e);if(!a)throw new Error("Estudiante no encontrado.");const n=r.lista.find((e=>e.nombre.toLowerCase()===t.toLowerCase()));if(!n)throw new Error("Asignatura no encontrada.");a.desmatricular(n)}catch(e){console.error(`Error al desmatricular estudiante: ${e.message}`)}}generarReporte(){try{if(0===this.#r.length)return void console.log("No hay estudiantes en la lista para generar un reporte.");this.#r.forEach((e=>{console.log(e.toString());const r=e.obtenerPromedioGeneral();console.log(`Promedio general: ${r}`),Object.entries(e.asignaturas).forEach((e=>{let[r,t]=e;const a=t.calificaciones.length>0?t.calificaciones.reduce(((e,r)=>e+r),0)/t.calificaciones.length:0;console.log(`- ${r}: Calificaciones: ${t.calificaciones.join(", ")} | Promedio: ${a.toFixed(2)}`)}))}))}catch(e){console.error(`Error al generar el reporte: ${e.message}`)}}};class a{#t;#a;#n;#o;#s;#i;constructor(e,r,t,a,n,o){try{if(!/^[0-9]{5}$/.test(a))throw new Error("El código postal debe ser un número de 5 dígitos.");this.#t=e,this.#a=r,this.#n=t||"S/N",this.#o=a,this.#s=n,this.#i=o}catch(e){throw console.error("Error al crear una dirección:",e.message),e}}get calle(){return this.#t}get numero(){return this.#a}get piso(){return this.#n}get codigoPostal(){return this.#o}get provincia(){return this.#s}get localidad(){return this.#i}toString(){return`C/ ${this.#t}, nº ${this.#a}, Piso: ${this.#n}, ${this.#i}, ${this.#s}, ${this.#o}`}}class n{#c;#l;#d;#u;#g;static contadorId=1;constructor(e,r,t){try{if(!/^[a-zA-ZáéíóúüÁÉÍÓÚÜ\s]+$/.test(e))throw new Error("El nombre solo debe contener letras y espacios.");if("number"!=typeof r||r<=0||!Number.isInteger(r))throw new Error("La edad debe ser un número entero positivo.");this.#c=n.contadorId++,this.#l=e,this.#d=r,this.#u=t,this.#g={}}catch(e){throw console.error("Error al crear el estudiante:",e.message),e}}get id(){return this.#c}get nombre(){return this.#l}get edad(){return this.#d}get direccion(){return this.#u}get asignaturas(){return this.#g}matricular(e){try{if(!e||"string"!=typeof e.nombre||""===e.nombre.trim())throw new Error("La asignatura debe tener un nombre válido.");if(this.#g[e.nombre])throw new Error(`El estudiante ya está matriculado en ${e.nombre}.`);this.#g[e.nombre]={calificaciones:[],fecha:(new Date).toLocaleDateString("es-ES",{year:"numeric",month:"long",day:"numeric"})},console.log(`Estudiante matriculado en ${e.nombre}.`)}catch(e){console.error("Error al matricular al estudiante:",e.message)}}desmatricular(e){try{if(!e||"string"!=typeof e.nombre||""===e.nombre.trim())throw new Error("La asignatura debe tener un nombre válido.");if(!this.#g[e.nombre])throw new Error(`El estudiante no está matriculado en ${e.nombre}.`);delete this.#g[e.nombre],console.log(`Asignatura ${e.nombre} eliminada del estudiante ${this.#l}.`)}catch(e){console.error("Error al desmatricular al estudiante:",e.message)}}estaMatriculado(e){return Boolean(this.#g[e])}agregarCalificacion(e,r){try{if(!this.#g[e.nombre])throw new Error("El estudiante no está matriculado en esta asignatura.");if("number"!=typeof r||!Number.isInteger(r)||r<0||r>10)throw new Error("La calificación debe ser un entero entre 0 y 10.");this.#g[e.nombre].calificaciones.push(r),console.log(`Calificación ${r} agregada a ${e.nombre}.`)}catch(e){console.error("Error al agregar calificación:",e.message)}}obtenerPromedioGeneral(){try{const e=Object.values(this.#g).map((e=>0===e.calificaciones.length?0:e.calificaciones.reduce(((e,r)=>e+r),0)/e.calificaciones.length));if(0===e.length)return 0;const r=e.reduce(((e,r)=>e+r),0)/e.length;return parseFloat(r.toFixed(2))}catch(e){return console.error("Error al calcular el promedio general:",e.message),0}}toString(){return`ID: ${this.#c}, Nombre: ${this.#l}, Edad: ${this.#d}, Dirección: ${this.#u.toString()}`}}function o(){const e=document.getElementById("form-estudiantes"),r=document.getElementById("lista-estudiantes");function o(){r.innerHTML="",t.estudiantes.forEach((e=>{const t=document.createElement("li");t.textContent=e.toString(),t.dataset.id=e.id,r.appendChild(t)}))}document.getElementById("btn-buscar-estudiante"),document.getElementById("buscar-estudiante"),e.addEventListener("submit",(r=>{r.preventDefault();const s=document.getElementById("nombre-estudiante").value.trim(),i=parseInt(document.getElementById("edad-estudiante").value),c=document.getElementById("calle-estudiante").value.trim(),l=document.getElementById("numero-estudiante").value.trim(),d=document.getElementById("piso-estudiante").value.trim(),u=document.getElementById("codigo-postal-estudiante").value.trim(),g=document.getElementById("provincia-estudiante").value.trim(),m=document.getElementById("localidad-estudiante").value.trim();if(!(s&&i&&c&&l&&u&&g&&m))return void alert("Todos los campos obligatorios deben estar completos.");const h=new a(c,l,d,u,g,m),f=new n(s,i,h);t.agregarEstudiante(f),localStorage.setItem("estudiantes",JSON.stringify(t.estudiantes)),o(),e.reset()})),r.addEventListener("click",(e=>{if("LI"===e.target.tagName){const r=parseInt(e.target.dataset.id);t.eliminarEstudiante(r),localStorage.setItem("estudiantes",JSON.stringify(t.estudiantes)),o()}})),localStorage.getItem("estudiantes")&&(t.estudiantes=JSON.parse(localStorage.getItem("estudiantes")),o())}class s{#l;#m;constructor(e){try{if(!/^[a-zA-ZáéíóúüÁÉÍÓÚÜ\s]+$/.test(e))throw new Error("El nombre de la asignatura solo debe contener letras, números romanos y espacios.");this.#l=e,this.#m=[]}catch(e){throw console.error(`Error al crear la asignatura: ${e.message}`),e}}get nombre(){return this.#l}get calificaciones(){return[...this.#m]}agregarCalificacion(e){try{if(e<0||e>10||!Number.isInteger(e))throw new Error("La calificación debe ser un entero entre 0 y 10.");this.#m.push(e)}catch(e){throw console.error(`Error al agregar calificación: ${e.message}`),e}}obtenerPromedio(){try{return 0===this.#m.length?0:(this.#m.reduce(((e,r)=>e+r),0)/this.#m.length).toFixed(2)}catch(e){return console.error(`Error al calcular el promedio: ${e.message}`),0}}toString(){return`Asignatura: ${this.#l}`}}function i(){const e=document.getElementById("form-asignaturas"),t=document.getElementById("lista-asignaturas"),a=document.getElementById("buscar-asignatura"),n=document.getElementById("btn-buscar-asignatura");function o(){t.innerHTML="",r.asignaturas.forEach((e=>{const r=document.createElement("li");r.textContent=e.toString(),t.appendChild(r)}))}e.addEventListener("submit",(t=>{t.preventDefault();const a=document.getElementById("nombre-asignatura").value.trim();if(!a)return void alert("El nombre de la asignatura no puede estar vacío.");const n=new s(a);r.añadirAsignatura(n),localStorage.setItem("asignaturas",JSON.stringify(r.asignaturas)),o(),e.reset()})),n.addEventListener("click",(()=>{const e=a.value.trim();if(!e)return void alert("Debe ingresar un término de búsqueda.");const n=r.busquedaAsignaturas(e);t.innerHTML="",n.forEach((e=>{const r=document.createElement("li");r.textContent=e.toString(),t.appendChild(r)}))})),t.addEventListener("click",(e=>{if("LI"===e.target.tagName){const t=e.target.textContent.split(" ")[0];r.eliminarAsignatura(t),localStorage.setItem("asignaturas",JSON.stringify(r.asignaturas)),o()}})),localStorage.getItem("asignaturas")&&(r.asignaturas=JSON.parse(localStorage.getItem("asignaturas")),o())}function c(){try{const e=document.getElementById("contenido-reporte");let a="<h3>--- Reporte General ---</h3>";a+="<h4>Reporte de Estudiantes:</h4>",a+=t.generarReporte();const n=t.obtenerPromedioGeneral();if(isNaN(n))throw new Error("No se pudo calcular el promedio general. Verifique la lista de estudiantes.");a+=`<p><strong>Promedio general de la lista:</strong> ${n.toFixed(2)}</p>`,a+="<h4>Reporte de Asignaturas:</h4>",a+=r.generarReporte(),e.innerHTML=a}catch(e){console.error(`Error: ${e.message}`),document.getElementById("contenido-reporte").innerHTML=`<p style="color: red;">Error: ${e.message}</p>`}}function l(){for(;;)try{console.log("\n--- MENÚ PRINCIPAL ---"),console.log("1. Gestionar estudiantes"),console.log("2. Gestionar asignaturas"),console.log("3. Ver reporte general"),console.log("4. Salir");const e=parseInt(prompt("Elige una opción: "));if(isNaN(e)||e<1||e>4)throw new Error("Por favor, elige una opción válida entre 1 y 4.");return e}catch(e){console.error(`Error: ${e.message}`)}}const d=new s("Matematicas"),u=new s("Historia"),g=new s("Fisica");r.añadirAsignatura(d),r.añadirAsignatura(u),r.añadirAsignatura(g);const m=new n("Ana Gonzalez",19,"Av. Siempre Viva 742"),h=new n("Luis Martinez",21,"Calle Central 10"),f=new n("Carla Rojas",22,"Paseo del Sol 5");t.agregarEstudiante(m),t.agregarEstudiante(h),t.agregarEstudiante(f),m.matricular(d),m.matricular(u),h.matricular(d),h.matricular(g),f.matricular(u),f.matricular(g),m.agregarCalificacion(d,8),m.agregarCalificacion(u,7),h.agregarCalificacion(d,9),h.agregarCalificacion(g,6),f.agregarCalificacion(u,10),f.agregarCalificacion(g,8),console.log("\n Buscando asignaturas con 'ma':"),console.log(r.busquedaAsignaturas("ma")),console.log("\n Buscando estudiante con 'Luis':"),console.log(t.buscarEstudiante("Luis")),console.log("\n Reporte de estudiantes:"),t.generarReporte(),console.log("\n Reporte de asignaturas:"),r.generarReporte(),console.log("\n Eliminando a Carla Rojas..."),t.eliminarEstudiante(f.id),console.log("\n Reporte de estudiantes después de eliminar:"),t.generarReporte(),console.log("\n Eliminando asignatura Física..."),r.eliminarAsignatura("Fisica"),console.log("\n Reporte de asignaturas después de eliminar:"),r.generarReporte(),function(){let e;do{try{switch(e=l(),e){case 1:o();break;case 2:i();break;case 3:c();break;case 4:console.log("Saliendo del programa...");break;default:console.log("Opción inválida. Intente nuevamente.")}}catch(e){console.error(`Error: ${e.message}`)}}while(4!==e)}()})();